//===========================================================================
#ifndef M_KalmanBajasH
#define M_KalmanBajasH
//===========================================================================
#include "mpiElement.h"
//===========================================================================

class TKalmanBajas : public TElement {
private:
/*         TFloat     PFil;                    // --- Память фильтра [ PFILL ] ---
         TFloat     p11, p12, p22;           // --- Элементы матрици ошибок фильтрациии на текущем шаге ----
*/
      // ---- Переменные фильтра -------
         TFloat  ppXk[3];          // --- Матрица максимальных ускореий ------
         TFloat  k1  [3];          // --- Коефициенты усиления каждлго из фильтров ------
         TFloat  k2  [3];          // --- Коефициенты усиления каждлго из фильтров ------

         TFloat   Xke_oc[3][2];     // ---- Оценка екстраполяционных значений выходов фильтра ------
         TFloat  pXke_oc[3][2];     // ---- Оценка екстраполяционных значений выходов фильтра ------

         TFloat  Xk_oc [3][2];  // ---- Оценка выходов фильтра ------
         TFloat  pXk_oc[3][2]; // ---- Оценка выходов фильтра ------

         TFloat p  [3][2];     // ---- Матрица априорных вероятностей  ---------

         TFloat psi_e11[3][2];    // ---- Екстраполяционные значения коеефициентов кореаляционной матрици -----
         TFloat psi_e12[3][2];    // ---- Екстраполяционные значения коеефициентов кореаляционной матрици -----
         TFloat psi_e22[3][2];    // ---- Екстраполяционные значения коеефициентов кореаляционной матрици -----

         TFloat psi_11 [3][2];    // ---- Значения коеефициентов кореаляционной матрици -----
         TFloat psi_12 [3][2];    // ---- Значения коеефициентов кореаляционной матрици -----
         TFloat psi_22 [3][2];    // ---- Значения коеефициентов кореаляционной матрици -----

      // ---- Расчетные Выходы -----
         TFloat    X_out_sr;      // ---- Усредненные оценки параметров положения------
         TFloat   pX_out_sr;      // ---- Усредненные оценки параметров скорости ------
         TFloat  ppX_out_sr;      // ---- Усредненные оценки параметров ускорения ------
         TFloat  psi_11_sr;       // ---- Усредненные коефф, матрици ошибок фильтрации ------
         TFloat  psi_12_sr;       // ---- Усредненные коефф, матрици ошибок фильтрации ------
         TFloat  psi_22_sr;       // ---- Усредненные коефф, матрици ошибок фильтрации ------

      // ----
         TFloat     NULLValue[4];
         int        InputCounter;
         TFloat     DeltaT, OldTime;
         TFloat     N;
     // -----
         void       SaveOldValues();
public:
        TKalmanBajas();

      // ----
        int        FiltrMethod;             // -- Тип фильтра (1. разделенный по каланам, 2. С обратной связзю по решению);
        bool       CalcFiltrWithDSTFitr;   // -- Если да, то фильтр с начальной оценкой параметров траектории ---
        TFloat     def_N;                       // --- Количество точек начальных параметров траектории

        TFloat AMax;         // ----- Максимальное ускорение --------
        TFloat Qm;           // ---- Qm - параметр определяемый из експерементальных данных ------
        TFloat def_Sigma_x;  // ---- средне квадратическое отклонение ошибок измерения ---------------
        TFloat def_psi11, def_psi12, def_psi22;
        TFloat Sigma2_x;     // ---- Дисперсия ошибок измерения ----------------------------------

        TFloat def_p  [3][2];     // ---- Матрица априорных вероятностей  ---------
        TFloat pi_[3][3];     // ---- Матрица переходных вероятностей ---------

        virtual void     SaveToStream(TStream *aStream);
        virtual void     LoadFromStream(TStream *aStream);
        virtual void     DrawElementFace();
        virtual void     Edit();
        virtual void     Copy(void *aElement);
        virtual void     Init();
        virtual void     InitBeforeRun(){};
        virtual void     Run();
        virtual void     DoneRun();
        static TKalmanBajas *Create() { return new TKalmanBajas(); };
};
//===========================================================================
#endif
